## 3. Add a Mapping Function  Mapping functions define how chain data is transformed into the optimised GraphQL entities that we previously defined in the `schema.graphql` file.  Navigate to the default mapping function in the `src/mappings` directory. You will be able to see two exported functions: `handleBlock` and `handleTransaction`. Delete the `handleBlock` function.  The `handleTransaction` function receives event data whenever an event matches the filters, which you specified previously in the `project.ts`. Let‚Äôs make changes to it, process all PLANET token transactions, and save them to the GraphQL entities created earlier.  Update the `handleTransaction` function as follows (**note the additional imports**):  ```ts import { AlgorandTransaction } from "@subql/types-algorand"; import { Transaction, Address } from "../types";  export async function handleTransaction(   tx: AlgorandTransaction, ): Promise<void> {   // logger.info(JSON.stringify(tx));   if (tx.assetTransferTransaction && tx.id && tx.confirmedRound) {     // ensure that our address entities exist     const senderAddress = await Address.get(tx.sender.toLowerCase());     if (!senderAddress) {       await new Address(tx.sender.toLowerCase()).save();     }      const receiverAddress = await Address.get(       tx.assetTransferTransaction.receiver.toLowerCase(),     );     if (!receiverAddress) {       await new Address(         tx.assetTransferTransaction.receiver.toLowerCase(),       ).save();     }      // Create the new transfer entity     const transactionEntity: Transaction = Transaction.create({       id: tx.id,       blockHeight: tx.confirmedRound,       senderId: tx.sender.toLowerCase(),       receiverId: tx.assetTransferTransaction.receiver.toLowerCase(),       amount: BigInt(tx.assetTransferTransaction.amount),     });     await transactionEntity.save();   } } ```  Let‚Äôs understand how the above code works.  Here, the function receives a `AlgorandTransaction` which includes all transaction data on the payload. We extract this data and then instantiate a new `Transaction` entity (using required properties `id`,`blockHeight` and `sender`) defined earlier in the `schema.graphql` file. After that, we add additional information about the payment (`receiver` and `amount`properties) and then use the `.save()` function to save the new entity (SubQuery will automatically save this to the database).  Check out our [Mappings](../../build/mapping/algorand.md) documentation to get more information on mapping functions.  <!-- @include: ../snippets/build.md -->  <!-- @include: ../snippets/run-locally.md -->  <!-- @include: ../snippets/query-intro.md -->  ```graphql query {   transactions(first: 5, orderBy: AMOUNT_DESC) {     nodes {       id       blockHeight       senderId       receiverId       amount     }   }   addresses(first: 5, orderBy: RECEIVED_TRANSACTIONS_COUNT_DESC) {     nodes {       id       receivedTransactions(first: 5) {         totalCount         nodes {           id         }       }     }   } } ```  You will see the result similar to below:  ```json {   "data": {     "transactions": {       "nodes": [         {           "id": "WOCAA5H7BBEBGRBBIKW6HMFRHVXNLZEBCCZK7K3PRFT2VJI3PHBQ",           "blockHeight": 24479670,           "senderId": "zw3isehzuhpo7ozgmklkiimkvicoudrceri454i3db2bh52hglso67w754",           "receiverId": "6brbuwoyu4aiebt3ptx7qmxcftzbsecuit3bwc3jsvgxwyzwjfv345t2oa",           "amount": "0"         },         {           "id": "4XQO6VO6HATIFGWGJ6DW5ZFJ5EIXNMECZHCOJV325K43TIZ4WOHQ",           "blockHeight": 24479796,           "senderId": "zw3isehzuhpo7ozgmklkiimkvicoudrceri454i3db2bh52hglso67w754",           "receiverId": "vvoud34opqsb2oxczrvww6wlwpwhhz6kken6y7ivaiqrjvsmvgndybrlk4",           "amount": "0"         },         {           "id": "3MVJEX7K5NYY76GRO6IWKAXVFAA5TRLYCM7IQNI37BIPKQBUNHMQ",           "blockHeight": 24479778,           "senderId": "zw3isehzuhpo7ozgmklkiimkvicoudrceri454i3db2bh52hglso67w754",           "receiverId": "5rrdqmlc44m57vpzlcawv2y7nymbrz4pvvvbxtvwkm4bb3ddfby46b7gce",           "amount": "0"         },         {           "id": "ZVQ2DAA6EYNDTT2K22GTVYUNCKJS43PR52M7UG5TR7KZ33NKWAZQ",           "blockHeight": 24479846,           "senderId": "zw3isehzuhpo7ozgmklkiimkvicoudrceri454i3db2bh52hglso67w754",           "receiverId": "tef2tph54kv5k56xaajbxaurht2enyv7cul45kdgmbcazy2x2goarf4kai",           "amount": "0"         },         {           "id": "BFGTT3YZMTBJLOBZJBZ3NPKD4O72MRNLJ2DJWFAFGNO7FQ2YDW5A",           "blockHeight": 24479802,           "senderId": "zw3isehzuhpo7ozgmklkiimkvicoudrceri454i3db2bh52hglso67w754",           "receiverId": "yb4bjl23u6fawyvp6zdyq4necjctkhn4mxcktbukpwrfoftqpdekdtww2e",           "amount": "0"         }       ]     },     "addresses": {       "nodes": [         {           "id": "fndsfhwxdue7nqavnpadw7gtqqinitzu3kw32sliq47iynymbwn2zm3iza",           "receivedTransactions": {             "totalCount": 91,             "nodes": [               {                 "id": "VRT6DW7V6AYXMQEAYM5QQTR3M4MIA6N6LGLYOZHIY3M2FGQ5DS5Q"               },               {                 "id": "4ZLLRGKYQM2LGUJXI3BCS7M2O3VLATWJZVGNNERYH4ADCVYATW2Q"               },               {                 "id": "I7M5N2BDYGLOJCQI7OB7KBYHZ2UKHNL5SAABELIIEHUANQ3WR43Q"               },               {                 "id": "RIDSPD6WAG7PWMLBOIFFPYKRDCW5ILH7BUTO7SFYYMGJAC365UVA"               },               {                 "id": "P7OVWVWF4NKQM7T47W45SUTZ6DULXKGQE2WDGLMEPC5AOVZUR34Q"               }             ]           }         },         {           "id": "gmgpw6xynm7fmnzx2l5zf7rekfh7r7z2qalg2cbyxtpbxbri6byrjtnn7y",           "receivedTransactions": {             "totalCount": 64,             "nodes": [               {                 "id": "GX6F5LY543W3FGARDMZ7D5WINAQH3CGN737XNRFA5OBUBRXTCM6A"               },               {                 "id": "BC62CCWFF4D62U4U3ZPZ5XXIDQ75BBV3MB6ILFCDSKXA6CN2E4QA"               },               {                 "id": "NX5WKZ7V7FASHCBCKWQNO3MWZOM5VVTOATM6WI7WZ3CRUENTKYPQ"               },               {                 "id": "6SQNJBAMOPPNIIHOW5S25A7GUZXNVDATWQMCZS63MCJCU3YTKN6Q"               },               {                 "id": "NGFDFMIGAXRPNK7KNIRQY3YPLG5QI24KLMO4LZPQZQ7MLO2VNQVA"               }             ]           }         },         {           "id": "7dvgazex6zzn33auj3wsnf6xcxk35gpj7gryb7hv4bm3l7ygpauhi6e7ia",           "receivedTransactions": {             "totalCount": 47,             "nodes": [               {                 "id": "MF6GMWWR5ZJPDHC27W5YOHRYVS6743ZP2ITXK2BYNPAACBTDFYCA"               },               {                 "id": "WNJPNYZE5VFVAUWIW54KMFTLJHPZLAAEYZQOLEPMDPA44EZXNMYA"               },               {                 "id": "E3ZW2ZBIEYKA5YQG2LJ3XDJ2QZBVFKIYYOTYN2TASA3WAHCQVLDA"               },               {                 "id": "OSE6CUEC7WS7XUNGZDB4OW5DXCDGAWVPN2XFWU4GY34TYBSJS26Q"               },               {                 "id": "VAHKAZIIC4OVEXNGKB62GITSFM2AXUNRSXADMOQHOUVFGZJMJUEA"               }             ]           }         },         {           "id": "l3aryt26d6v4asp4vqpe4lb6jwnmx2onolompvrrqjq7i4akzk46nkjixm",           "receivedTransactions": {             "totalCount": 34,             "nodes": [               {                 "id": "IO3757FYUMRHSULVI4M32UKLMR7UUEU3RG73XUGPCE4YHRCO4CXA"               },               {                 "id": "WXLANXMVWEFYDKKKKT75LKZKK2QRADFQK5QM4ZQBT43KF4S2IHSA"               },               {                 "id": "KO3QNDACY6S4WLUCF6XJT2E5VDYEPB5C4D6NS6H7M2RDZOPADKOA"               },               {                 "id": "E43VGQYFKZNJLCK63C7OT6SDWEUATSTIMDIP6Z72F4G74UBOMZHA"               },               {                 "id": "UVFOBUNEN37OADQT2WG6N5I664GM22UMC6PYVFTFR4GLONBPNPWQ"               }             ]           }         },         {           "id": "akqtyjstxod7norenujjujiaxmd2a6fi4ixvq2banpc4e6n5nqxcvgoecq",           "receivedTransactions": {             "totalCount": 31,             "nodes": [               {                 "id": "GADJ5X5DEM3NQZXMXBYTUBNIPKYWW677MGOMH65UVT4REJT5VSMA"               },               {                 "id": "W42ONSONMCYYRKP6SDQODTVTKTAT3Z5NSW7Y74JLHZ6AVPAAENYA"               },               {                 "id": "HVCR3VQYJD3S6PLJZEYVZTOQPQ5TPUYTJTQVGXY4Z63LU3GFXNAA"               },               {                 "id": "EJY5B7CUF2PECOOEZJRMW3KH6LTCWC7Q5WWWWBBVBVTVCK6KB3ZQ"               },               {                 "id": "JOR5N3NNCN75BCP5GBGKYZT5MPYNHJ5I5ZUWF232Q3XZGWUWVIMQ"               }             ]           }         }       ]     }   } } ```  ::: tip Note The final code of this project can be found [here](https://github.com/subquery/algorand-subql-starter/tree/main/Algorand/algorand-starter). :::  <!-- @include: ../snippets/whats-next.md -->         å"      ©LÂx˚ëøÚYä#êƒ†?6ﬂoQπÀ∫ø!änbÌî´ø˘#Vê∞π™?ÕF˚‡˚i¶øêjÿÔâu≥øT!ŒÛBÜ?¬ËπÌëõ?7®‹»eï?”\bΩ5÷§?
¿◊¡’¬≥?Ô_{fIê?»ØøÔVÀÜ? ºb§°?j]Bº∞`ßø >ü3/¨ø™ŸÑ-÷mq?¥ÿ¡àµÑ?˝ª9∫?åø´A√[—°?⁄“z*mîøƒ¡*jrëøê'&»8·ñø∞b∏æ8¬?¯˜‰$>æáøí ‹EDÏ]øŒ©'ùèüø—LÄƒßø[(≈Œ·ö?· ·‡^€°?.ãö.õø∂e-ˆx–Åø$ç©r‹å?|@^$<∞ø¶ËÉuÛµ?71aä+°ø¯ÑºÉwpòøΩ–w≠?√ÔP[Ωüè?‘|◊òæöøw~˚ÅEZ¢øEk)F¥"òøHô`zÛõøS}B—óÆø÷^\ ;ô?-Û±˙ª∞?|ˇçüÄƒc?ç©Ø?mzß?_ƒ~ªÆ©øUÇ/âÅøkíHp]ô?ëÇÊòï?Á*›ò}û?Gêñ?Èà©?·ö6A¶Eë?ç˙Q¯_Ûô?VCEIú?Ë⁄z˙∆ﬂ∂?À<ëﬁr öøÓ—vßñ≤?Œÿ~œõ¢?ˇÒ+ƒç’§ø˛!
!x`∑?+r_9[¶?ÀX^§øπ±— ¢$ñø¸s◊Ú≤?,6„Ω5sØ?dL!“9tørÃâ®Oìô?ﬂÿõÃé?Ùú'∞ñ¡Ä?µuÑî‘}?&†*c⁄wxøÁß"ÙÜOøKñÕ˚Éq™ørÄÒƒ Å?∫≤Úh6—£ø–Eµå˜¶?‘∂£0÷‘°?a∫àó?w'?¨Æ°?ÛW√£_Î¢?]©F3?Ã¶?ÕÑ”@˚™É?«:Ç?Ô“≤øÎDˆˇy3∞øV_¿?c.£øÀª…Û	n™?µD}~WÖ∏?Úﬁ~‰…zï?0âU±h¢é?˛dJÛ‡Qó?hS@ùúË´øå?˙=†øLÃ∞⁄«Õê?ﬂÕl∫?∞?¡¯í[ÕüøM£$ã)∂ø›êïK"|Ö?ﬁÅúX)òø◊ÃØúº≈5?çÁ›ü%∞ø%ß¿ƒä®?8ˇVÇ*£ø*NZ]ÛO´ønf‡ø˙Òù?∏˘I,^â?ßl[Ä?¬D¬÷ìø›P]PVQ?µ∏ûü‰9õ?‚≤ÓE“seøEÜ†ø≥≤øπl˝ø≠e¨øˆø˛˚B¿?g¸∂∏™õøÂê(BWë?a ≥◊*›wøøΩ—	∞é?e∞¥Äæç?T‡çrÏâ?s8I⁄K≤??Ωﬂâ’ˆ©?ú∫∏ÆÖ?êtR7Œà?DWa¥@¶ø\øo[úøı
Còf∞ïøÕ’— •ìU?1•æƒ	`ïøøÛ|˛bìø®"õˇÂ«Ä?Eâ˙
ô?ìf‚¯àß?3≠Ú µøá±;ìÏ«¶øöüSßâ?OãaQàôøÔ^≈r∆∞?ß]+%Ù»ßøÄŸÊJ-ó?ÏÙÊ‰
ûø2ñÕBY˝wø
Tmô∆Õeø◊C@-"dä?˙¬˝¢ÒÙpøw{µH‘∂øt©ÅNWá?®èŸ¢?yÕä,¬‚†?£{˚bû¿?ø∫]§Zà1ÄøÛÕÔay•øæÀ˝ı+¢ø#/ORıâ?ƒ…`9 Í•øöjG Gì?ıaÆ&˛ò?˜Ö	ÃaøX·Œ9ô?	œã‡mHçøú6ZCÊàø˝Vv∑n'î?˝·!kë¨øÃ^∂ù∂F¨?á◊ïôI	û?+œQÅr_ß?W”]ê/†?·5VjÆø<‹£øPÆ^Ç©≠øL„ì%•fî?\€¬ê(ˆ≥?KÒ¢√¥èø0E⁄Bgâ?€~'ù∞î?[D©@Sa?#i ]j’ßøüR◊çïøJ7≤¿ë≠øëZ¸˚Œù?y±√ß%ô?<≥úº3Wpø®ÌUû÷™zød¬ˇjû?…Ö»ækù¶ø[v¸™k£ø|âí?‹ûø˙t#…ˇ&\øÚˆFÇgm?ä´Qf?Ê%ø°ÈRG∫´v?z©ë√Kc°?b%»Ô∂•ø).ÂÅj±®?º –hx°ãømèˇ~‹©?çêâ≠î®øñ:π¿îjùø»#qº&ó¨øR≠íÉjgí?⁄*ÜÄÉ√ì?6í¬ƒ8‚üøG∏^/∑?r(ç‚íødóù˜_¨?|@p˙Rˆî?õ>)˝˛y§?7˙ñ≈Ω„oø)(¡ÚRw¢ø˙i‘*óçø“÷ÓBfsp?˝¯V"ì>cøæ®ˆL£á°ø÷≈ââØqáøSÈ	˝cu?∑£`Îbä?’ÁÛTåòøIÓ∏˙tÖøÔSŸ†ƒ!ßøˇˆ∑ükJø‰ªH,Ñøe•ÕaåÇü?$Z*#πÚïøù?‚aU§?-…¶(ì?u ^)gø≤€≥#ﬂÈÅøqÀ∏Çï`?¨1j<¶ø_Ô∑£#¨Æ?Oıq∑⁄≥øã]fŒ∂wÜø+˝æ^Â˘§ø/Åû$bö?¨qÔGu-êø;ÓV=yr?!‡€ë=¢ø¨Â‡Fàú?óÜ‰€¯tø?›ƒπ~§? ¶¿ì?“ ¡î(°ø#∆_G+©ø»˘æ_ú]¢øqû•º:Ìã?áòÉ·àø‹¸≤¿∆ü?"-wa…'≥?Õ˘€˛í›¢ø≤ÈQØ≥øúl$Öâq®??≈gnb°~ø Æ`çFáø~[ƒ8˛í|?Üoƒ4‡ü?Ú6¬‰> ùø7O[£ø"°ÅÊ‡äï?-ÄúVûø±5“ákíø_]}ò¶ñø82M‡Ôzó?∂’ÊbÄíø⁄ﬂ2ê?‘™ÜíU∑ølÎ”§.6iøoW;Ãè¶õ?cóM%®Ü®ø[a{ﬂXM©øÙ_÷zuDû?Wdœˆå?ç§BJaÅø),ﬂùˆ@•?TÆ*⁄†∞?Ê(Y±l§®?0í}]t´ø¥ÂŒﬂìm≠?∫)Úﬂ:¨ø<O∏.g|xøxd˝}˛/êø±áY‹=HØ?ÕÖF>”e?ûªΩ°y™ø$Ω¡zPêøµÌûz?Ëä}¬üÜ?cXjb&ˆõ?—ÅY_,%û?Â	PÊD5?r≈7ß°,ïøøçà∫ÛÍé? Æ£?nuﬁ@-|ø*xIñf£?∆P&fyô?ßÁ¶¢∏pøÌn∆≤^·tøä˙H=P°?®c–4!‡é?ÿ∏ºAÕÛ®?Ê/„\y©?∑∞ËÇlÏØ?Ë=é∫oõøı‚Ï	–îøB{©cã`Äø_Ì-á∞áøUä‰Ωø@zø˙X;6tF{ø∏|ÜØí?U"˝¥Yûø>bÏk˙?°?¡Ml•#>`?ÊÅy‹xˆ®?}9~k—IÖøä]\äΩõ?
{ñƒ≤…à?u?ΩmUìø#~>º9‰g?°‰È{?+ìl˝^x?,ÂõæµKïøÖõ¡ì¢?]±∏†{mz?êA¢}ãú?“ÆùÉ¬˚µ?˚2CÏçOQ?≠Á_#-ª•?Öc‡?òrø•¿zö®ø‰±òèº2?2P∑ÕëkøÀ˜)≠õìøÂq2 d!Ä?jD†bÎ~?é√r·∆Åë?}∞≠∆è?ËÃRø∆Ü§?BﬁºÇ~¶?ÛawEîøõÿÆñ\Aíøx2Èä◊Øøö≈¥S¨ê?ìØb&éä?vÍèòÔÄøCNí¿|8îøF!∏7g_øÂ˝Í74·êø6∫4í≈|èøJF˛˚¥”ò?±XN8wòìøılê(8Âìøú⁄ÊÒàøJYLçLó†ø˙∏F£–§?Æº`GNÏêø<&qßãLÄøQãØ‡¯Üäø€ƒúFpi?ÛwE©Í	äøõeòÿQ‹Ü?ÌuAkË™øVìH™k†ø%˘
~Íú?›lbñ∑?@q·•"§?: fÁ±?#=QÅØ¬õø±hÈÛúç?H∂vq?ô™eax†?ê6[gÊï?
ÿ{‚N¢øR˝÷ê∞V§ø√CﬁìM®ø≥S¬ˇïáø=~‹oŒ7áø3>Ù&Ñ„ï?ö¸`*G§ø ¶`/BÜøëÉBü[Æ?—4[ã¨ª}ø!WóÊ•?Ï?¯\àøU· 8fççøGÇäYÍíøZL*"‹«ö?æKö ô˜hø) G#Aûø∑'äàIUòø®LZÜrÅõø[N˝|éßø(j®“»Gxø∆Gì§ŒPê?!⁄ ú}?¡•ÏøëÍÜ?DŸw)î?VADL¨?¿2/∫Œñ?&˝v?íÖßøÛ^ÇA<åëø¯¸¬¿•øªC_ÅµXÑ?ﬂ∫˝íXü? ˘ÿ~Æ∞ø%6O}çø5 ?åØ?È:ô'ÛióøT˘îïªØ?Èò5©O©?mv ¬*ê? ∏;å≈™øM`LêóâÑøL3kñºÇøâ«ûQ{©?rgﬂBBÉø%”B=Õ&|?dÉ•p?Ú∆ﬂ|>X©ø†ˇü<åF£?_GÆ∆rø°I•üøÛÿ∫«ﬁ˙òø˙ÇˇÙ9†?úÿ_Pà{éøúg‚Ÿ¬Lü?£†A.öø`SJ|¨Ë£?L_ß_QrøÌpú]ºÙÜ?cÌ6Bç†?—¡¯>\?â?i‘[>tÛd?/m’Rì¨?o‘%≥ﬂî?òÇ ‹÷ùøﬂ 8ò{∏êøisÄÜUóø8;.∑oFÅ?çÓ%/`9Ü?†0e6ÅOÉøHû¯%síøç∆˝wﬂ°øø˝o€≠µ?¨‘ºówñøqµœ‹£4¢ø`jtú0≠øâ<0∆Êø‹1†◊“µñ?ÿï\Ê í?nY◊Àcã™?˜s
Ú≥ë≠ø&µƒàL¨?
sø‚pwøèMUN9.îø‚Sc∂"9ÜødÑ˜"»´Ø?=B0ªÂÚí?]:˛˜ú?ÕœøLªêøêÏ`∞Zö?k}⁄Ôl≤Føéô¿Ñ<Hñ?5mµ=06¢?S≠	ís´øïç°x¢¶?P$Ω‚àµ?õÅ´Î9±è?Ã*l∏ ´ø˝˛_∆Œt?û.ÊB@§?ﬁÄEüòø[4˙W™ôê?ë¥7“˚yø‰T–å¸¸r?ø˙¡ærƒãø◊ye(8§?ın›·7°ø5+¡“B£øãè?∂ØøÔt•m±ø˜.ôªz;òøˇ3¡GÅø#‰é«§pQ?—A„˛-EçøÕ ¢üswyø?≈vôè€ó?MΩ.£Ü?—’2&∏ÈÉøÚ˝¯>a¯xøa¡ed|ü?t}E’¥-à?ﬁ˜πÎ∂Uö?gL&FMˆñø∏CIú£˚ñø2œ•d_Åø4MYˇG£ï?#YÂ…Cd?÷®^G¥nøböÒœo£?sÆh@´6üøÄÒ ùÈ∞ø˛#vûpø}ˇeEdøﬁÚG⁄”t?<MÁ!´øã‚Ú´{\®ø?P€>Ä?”KkWwøC≤¸–7/ßøKÖŒJAîø0ÛÖﬂ9”™?ñ∑<9∑«êønîiÚúF©ø$>ˆËä?1 Kœ)Å?BΩœßD≤ø–¶SÆ¥?Ø Æ}dÁ´?∆1‘Y´?wlZ‚.Êñ?q t-rXø®|ìúœ]ã?fâõAÊDõ?£NCÀÔ≠øZ>∂XñWé?ö¯WÍ¥≥ø÷ß'c-+?lﬁ£ƒœsø Û1∫‰íøÌyx{ÇWòøH€¸ëú0?'[ç> gøZVﬂ–∆ß?*eBaäQ•?‹gT¢%˝xøVõˇW9î?‘“∂Cæ©ê?o=HÏá¢?DüvïA˜£ø?{h˛ãø3Iú}4à†?fU√ˇœ¡©øÌGî:$\öø‘ =J°ã?*‚ªg9õ?êa‡|îXÄ?*b´‡ƒK≥øÆ∂8⁄u?j¨»+£øÓ&˝_£òø"q∞≥¯°ø®*ÊÄZïáø∏>ò◊•ø \F’¢J|ø◊-ˇÚT£ø◊é˚πÄäø‘”Äz°w?cÇ‹5HPZ?'_˛zÌËã?&BçºXäß?v†Åúk}øÒ†jW¢ø
–ì¯˝•ø≈;N>.ã§ø?“ø_Æ˜rø@&&Xñ?À‡Aû?Oı$„*¨î?ØÑ≈Ò∑øg™ˇ*¬ñøØ‚û5ﬂß?IåGüTø.br„ô?{Ω–cavó?p&i®òéøTdQ1˛è?'¨€@Ñ/ëøD˘Í˘Üå?˘ﬁì°øC”
∫Zz§ø9õcÄ"øÍG˝‘¸!≠øøo2`»ß?Å¨
Å∆±ø3Æ∞«·Ñ?Ç€∆ﬁ∞Ø?.˚6C¯∑ßøíQmâøñ?ß˜ø
yg?û∑êÀ®«P?Á{aScõ?ÚCÑJÿó?† W†Äg•?µ®OráM¶ø iê#§?ÌÔà‰+ê?ä5H ∏¢?Dí&Ã‚ÉøNVÜ8˙£øÆ&”ëÒb§?4nyÀ&◊à?{uê¶ìøíR  ±?Îsƒ@(ú?Ämç†‚L¶?œÖ$¬•¥mø3KÇæîñø8p á5S∞?ºL3.3§Ç?u√√l∏3?ñjÌ8ﬁäøéÚÇ>G±?	∫o†á˜Kø≤È√ùD©u?ôN‘H	ØøA£<?•ø‹0`ÇÄ†©øô-ΩÏç•øù”‡A©yüøÕK‚cìø‡Åt˛@?n!ü¬◊¯ê?2r~Ÿ)°?1‘∑Ö'z?°¶  ∑∞ø›#≈¨âòø¨,≈Ê«Öa?Ô3Çñ˜Çøæ¢¢Ñuãø∫jû#Ú]¶øj:Á»FØøçß/ï»OÆøÒHº<ù†ø‘ø˘≥îíø¬™˚y≥õøë[Y√¡µ≠?*íG!›ê£?)RÃ%H†?@£ﬂ•qõø$^î\¢”©øıëƒ‰';`øúËY7È%?–"]óG£ø˛©Ü7J‚Ø?‡É‚èÓ¶?ã˚;ñˆ]ø•#t(' ôø†ÉãvÁÅ?˛≤Æ„U\¨?3e–ûÄ´?d=µ˙ÍíøŒõŸöÏ í?(µ_{t?¥P:™˝J}?LPm∑˜Öî?)ëßY^¡?,,{º◊„•øüàM}É£±ø¬dºC≠?O<ÎC¨8∞øMó::Aú?é0Á˛®y?i/hÑ+§øNÊÂ—	x∞??[A≤B¨ø1PÁƒ˝À¨øÕÍø¸ÖÜ¢ødìC^Î_ùø§a§3úøYBcΩÈËJø√Ω	£©ø”≈0Sn?›moõœ◊ü?óSL¶µlø©kËƒ°à?õ)∆\∆ó?G˙º˚FËë?∏≥
ˆ∫†£ø≠Î£ïsíø∆≥Wa+ã?∑3‹ÏöÖøÑÂXgº¶-?:6
bñ°ø±æwWQîø¯änΩ¶°?™eT·®øIT=”*~±ø_ú‹∑ãøXâ_j±á?`¡⁄qÛ(ÖøõÔJ‹t±ø"(
6®øÃô_`eS´?Í!Í£+èê?Z=Æ[óø¸nãf?QÈØ>ª±?û‹zCùñàø±≠„±Ê•ø”Öö‰Àïødõéﬂ_-ÑøLïˇ˚•ø">VÏ˙X?9Ü ŒëøõØy9ñ?PÙr8Ûúøf
õ÷≠kÇø»ºÛcJ&ò?“XSÜﬁn?a!$|ß¶?≠ËÉ#P∫? °A]x´xøQ›@ß>©ø£¿@ÔÜ?<√P^ñº±øÍuÕê?R/Aô¥?˘"¿:•ªì?†¢èû«Õù?î9œ˝9Í_? #€†òøó!
=Õè¶øæiŸﬁó»wø>¬Ñ_WÑû?2\víØø|zô©É?‡êMø2Åøc<?°õ?+
Lã ÏÖ?≠≤•˝≈"∑ø-—’-m˛¢øÀ˘Föñ]î?]Aì˜Éìø¶≈ı¸$œ}øå	÷›·¢øè#>}©{?\Õ∂™WWûø∂cèıy1£?Ø/»LXq?L+˛·9„x?<L™üˇj¨?›√êb°R§?ûË>˘Ó¢?¡aÄ≈‹|ø.Õ‚&)§?—àl¸ñÙ™?™xÈG?ô?mﬂî”Mèø¸ô?{5ö? uH%ÕÜ?∏AsÒEËhø›ùa‹†ÉøMò’‡"úÖ?¿"i~œ$•ø¿|ÏBiß?F6ú°‘8¢?ˆÊ?Ω|_£ø’"xö—ù?Æ9c?[lä?√˝Wà‘’ë?˜„Sü?#Cﬂ=Ü^MøP¿‘°cüØ?`W⁄|8U°ø÷©—/:Óvøå"             ú"                     ## 3. Add a Mapping Function  Mapping functions define how chainƒ:      ;      ## 3. Add a Mapping Function  Mapping functions define how chaio;      T;                      º:             ;             T;             v   
content ˇˇˇˇˇˇˇˇˇ*string8
3vector ˇˇˇˇˇˇˇˇˇ*fixed_size_list:double:7688j
lance0.17.0z
lance0.1x   §w úu*l
0 ˇˇˇˇˇˇˇˇˇ*struct

null_count*int648
	min_value*string8
	max_value*string8 ‰v<         LANC